#!/bin/bash

#  ad88888ba                                        88                          88888888ba
# d8"     "8b                                       ""                          88      "8b
# Y8,                                                                           88      ,8P
# `Y8aaaaa,     ,adPPYba,  8b,dPPYba,  8b       d8  88   ,adPPYba,   ,adPPYba,  88aaaaaa8P'  88       88  8b,dPPYba,   8b,dPPYba,    ,adPPYba,  8b,dPPYba,
#   `"""""8b,  a8P_____88  88P'   "Y8  `8b     d8'  88  a8"     ""  a8P_____88  88""""88'    88       88  88P'   `"8a  88P'   `"8a  a8P_____88  88P'   "Y8
#         `8b  8PP"""""""  88           `8b   d8'   88  8b          8PP"""""""  88    `8b    88       88  88       88  88       88  8PP"""""""  88
# Y8a     a8P  "8b,   ,aa  88            `8b,d8'    88  "8a,   ,aa  "8b,   ,aa  88     `8b   "8a,   ,a88  88       88  88       88  "8b,   ,aa  88
#  "Y88888P"    `"Ybbd8"'  88              "8"      88   `"Ybbd8"'   `"Ybbd8"'  88      `8b   `"YbbdP'Y8  88       88  88       88   `"Ybbd8"'  88


#------------------------------------------------------------------------------------
# Initialisation of globals.

set -o nounset
MYDIR=$( dirname "$(readlink -f "$0")" )
source "$MYDIR/variables.sh"
source "$MYDIR/utils.sh"

#------------------------------------------------------------------------------------
# showhelp - give some info about the service. SERVICENAME and IMAGENAME are provided by variables.sh.

function showhelp {
cat <<EOF >&2

NAME
   ${SERVICENAME}

SYNOPSIS
   ${CODE_S}$BUCKET=... S3KEY=... S3SECRET=... ${SERVICENAME} configure${CODE_E}
      set up upload script

   ${CODE_S}${SERVICENAME} start${CODE_E}
      Start Jenkins. Connect over port 8080.

   ${CODE_S}${SERVICENAME} stop${CODE_E}
      Stop Jenkins.

DESCRIPTION
   A simple jenkins dService for building dRunner.

EOF
}

#------------------------------------------------------------------------------------
# Run a command in the container. If we had any volumes we'd add in "${DOCKEROPTS[@]}".

function dockerrun {
   docker run -i -t --name="${SERVICENAME}" "${IMAGENAME}" "$@"
   local RVAL=$?
   docker rm "${SERVICENAME}-${COMMAND}" >/dev/null
   if [ $RVAL -ne 0 ]; then die "${SERVICENAME} ${COMMAND} failed." ; fi
}

#------------------------------------------------------------------------------------
# The main function. We can add any commands we'd like here!

function main {
   if [ "$#" -eq 0 ]; then
      die "servicerunner must have the install argument."
   fi

   COMMAND="${1}"
   case "$COMMAND" in

          #--- standard (required) commands

         help)
            showhelp
            ;;

         enter)
            docker exec -it ${SERVICENAME} /bin/bash
            ;;

         selftest)
            ;;

         obliterate_start)
            docker stop ${SERVICENAME} 2>&1
            docker rm ${SERVICENAME} 2>&1
            ;;

         uninstall_start)
            docker stop ${SERVICENAME} 2>&1
            docker rm ${SERVICENAME} 2>&1
            ;;

         #--- custom commands

         configure)
         [-v BUCKET] || die "Undefined: BUCKET"
         [-v S3KEY]  || die "Undefined: S3KEY"
         [-v S3SECRET] || die "Underfined: S3SECRET"
         cat <<EOF >/config/upload.sh
BUCKET=${BUCKET}
S3KEY=${S3KEY}
S3SECRET=${S3SECRET}"
EOF
         ;;

         start)
            #docker run --name ${SERVICENAME}-myjenkins -p 8080:8080 -p 50000:50000 "${DOCKEROPTS[@]}" jenkins
            docker run -d --name ${SERVICENAME} -p 8080:8080 -p 50000:50000 "${DOCKEROPTS[@]}" j842/djenkins
            # "${SERVICENAME}" "${IMAGENAME}"
            ;;

         stop)
            docker stop ${SERVICENAME}
            docker rm ${SERVICENAME}
            ;;

         #--- unrecognised commands

         *)
            ! isHook ${COMMAND} || exit 127

            showhelp
            die "Unrecognised command ${CODE_S}${COMMAND}${CODE_E}"
            ;;
   esac
}

#------------------------------------------------------------------------------------

main "$@"
